{"version":3,"file":"static/js/326.f138cac2.chunk.js","mappings":"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","sources":["components/Reviews/ReviewCard/ReviewCard.styled.jsx","components/Paragraphs/Paragraphs.styled.jsx","components/Paragraphs/Paragraphs.jsx","../node_modules/nanoid/index.browser.js","components/Reviews/ReviewCard/ReviewCard.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Card = styled.div`\r\n\tborder: 1px solid rgb(227, 227, 227);\r\n\tborder-radius: 8px;\r\n\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n\tbackground-color: #fff;\r\n\tpadding: 20px;\r\n\twidth: 100%;\r\n\tmargin-bottom: 20px;\r\n\tmax-width: 900px;\r\n`;\r\n\r\nexport const InfoGroup = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: start;\r\n\tmargin-bottom: 20px;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n\tmargin-right: 15px;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\theight: 50px;\r\n\twidth: 50px;\r\n\tborder-radius: 50%;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: start;\r\n`;\r\n\r\nexport const Author = styled.h3`\r\n\tfont-weight: 700;\r\n\tmargin-bottom: 0;\r\n\tmargin: 0;\r\n`;\r\n\r\nexport const ReviewDate = styled.h5`\r\n\tfont-weight: 300;\r\n\tfont-size: 0.9em;\r\n\tmargin: 0;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ParagraphStyled = styled.p`\r\n\tmargin-top: 0;\r\n\tmargin-bottom: 10px;\r\n\r\n\t&:not(:last-child) {\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n`;\r\n","import * as textApi from 'services/index';\r\nimport { ParagraphStyled } from './Paragraphs.styled';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst Paragraphs = ({ content }) => {\r\n\tconst textArray = textApi.getParagraphArray(content);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{textArray.map((line) => (\r\n\t\t\t\t<ParagraphStyled key={nanoid()}>{line}</ParagraphStyled>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Paragraphs;\r\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { Card, InfoGroup, Avatar, Info, Author, ReviewDate } from './ReviewCard.styled';\r\nimport Paragraphs from 'components/Paragraphs/Paragraphs';\r\nimport PropTypes from 'prop-types';\r\nimport * as api from 'services/index';\r\n\r\nconst ReviewCard = ({ avatar, author, date, content }) => {\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<InfoGroup>\r\n\t\t\t\t<Avatar src={api.getImage(avatar)} />\r\n\t\t\t\t<Info>\r\n\t\t\t\t\t<Author>{author}</Author>\r\n\t\t\t\t\t<ReviewDate>{date}</ReviewDate>\r\n\t\t\t\t</Info>\r\n\t\t\t</InfoGroup>\r\n\t\t\t<Paragraphs content={content} />\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nReviewCard.propTypes = {\r\n\tavatar: PropTypes.string,\r\n\tauthor: PropTypes.string.isRequired,\r\n\tdate: PropTypes.string.isRequired,\r\n\tcontent: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ReviewCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const ReviewsList = styled.ul`\r\n\tpadding-bottom: 20px;\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as api from 'services/index';\r\n\r\nimport ReviewCard from './ReviewCard/ReviewCard';\r\nimport { ReviewsList } from './Reviews.styled';\r\n\r\nconst Reviews = () => {\r\n\tconst [reviews, setReviews] = useState([]);\r\n\r\n\tconst { movieId } = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\tapi.getReviews(movieId)\r\n\t\t\t.then((response) => {\r\n\t\t\t\t// console.log(response);\r\n\t\t\t\tsetReviews(response.results);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.error(err));\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ReviewsList>\r\n\t\t\t\t{reviews.length !== 0 ? (\r\n\t\t\t\t\treviews.map(({ author, content, created_at, id, author_details }) => (\r\n\t\t\t\t\t\t<ReviewCard\r\n\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\tavatar={author_details.avatar_path}\r\n\t\t\t\t\t\t\tauthor={author}\r\n\t\t\t\t\t\t\tdate={created_at}\r\n\t\t\t\t\t\t\tcontent={content}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<h1>There is no reviews yet :/</h1>\r\n\t\t\t\t)}\r\n\t\t\t</ReviewsList>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Reviews;\r\n"],"names":["Card","styled","div","_templateObject","_taggedTemplateLiteral","InfoGroup","_templateObject2","Avatar","img","_templateObject3","Info","_templateObject4","Author","h3","_templateObject5","ReviewDate","h5","_templateObject6","ParagraphStyled","p","_ref","content","textArray","textApi","_jsx","_Fragment","children","map","line","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","avatar","author","date","_jsxs","src","api","Paragraphs","ReviewsList","ul","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","useEffect","then","response","results","catch","err","console","error","created_at","author_details","ReviewCard","avatar_path"],"sourceRoot":""}